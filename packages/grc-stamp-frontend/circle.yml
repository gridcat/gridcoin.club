version: 2

defaults: &defaults
  working_directory: ~/app
  docker:
    - image: circleci/node:14

jobs:
  grc-stamp-frontend_checkout_code:
    <<: *defaults
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/app
          paths:
            - .

  grc-stamp-frontend_bundle:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - restore_cache:
          key: npm-v1-{{ checksum "packages/grc-stamp-frontend/package-lock.json" }}
      - run: cd ~/packages/grc-stamp-frontend && npm ci
      - save_cache:
          key: npm-v1-{{ checksum "packages/grc-stamp-frontend/package-lock.json" }}
          paths:
            - ~/app/packages/grc-stamp-frontend/node_modules
      - persist_to_workspace:
          root: ~/app
          paths:
            - node_modules

  grc-stamp-frontend_run_test:
    <<: *defaults
    parallelism: 4
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: run tests
          command: cd ~/packages/grc-stamp-frontend && npm run test


  grc-stamp-frontend_run_lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Run JS Linter
          command: cd ~/packages/grc-stamp-frontend && npm run lint

  grc-stamp-frontend_run_typecheck:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Run typechecks
          command: cd ~/packages/grc-stamp-frontend && npm run typecheck

  grc-stamp-frontend_release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Trust this ssh key
          command: mkdir -p ~/.ssh/ && touch ~/.ssh/known_hosts && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Semantic release
          command: cd ~/packages/grc-stamp-frontend && npm run semantic-release

  grc-stamp-frontend_build_image:
    <<: *defaults
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - run:
          name: Get the recent changes
          command: git pull origin master
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: apk add --no-cache jq
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            cd ~/packages/grc-stamp-frontend && docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            cd ~/packages/grc-stamp-frontend && docker save -o /caches/app.tar app
      - deploy:
          name: Push application Docker image
          command: |
            docker login ghcr.io -u gridcat -p${CR_PAT}
            docker tag app "ghcr.io/gridcat/$(jq -r '.name' package.json):$(jq -r '.version' package.json)"
            docker push "ghcr.io/gridcat/$(jq -r '.name' package.json):$(jq -r '.version' package.json)"
            docker tag app "ghcr.io/gridcat/$(jq -r '.name' package.json):latest"
            docker push "ghcr.io/gridcat/$(jq -r '.name' package.json):latest"

workflows:
  grc-stamp-frontend_build-and-deploy:
    jobs:
      - grc-stamp-frontend_checkout_code

      - grc-stamp-frontend_bundle:
          requires:
            - grc-stamp-frontend_checkout_code

      - grc-stamp-frontend_run_lint:
          requires:
            - grc-stamp-frontend_bundle

      - grc-stamp-frontend_run_typecheck:
          requires:
            - grc-stamp-frontend_bundle

      - grc-stamp-frontend_run_test:
          requires:
            - grc-stamp-frontend_bundle

      - grc-stamp-frontend_release:
          filters:
            branches:
              only: master
          requires:
            - grc-stamp-frontend_run_test
            - grc-stamp-frontend_run_typecheck
            - grc-stamp-frontend_run_lint
          context: semantic-release
      
      - grc-stamp-frontend_build_image:
          filters:
            branches:
              only: master
          requires:
            - grc-stamp-frontend_release
          context: git-container-registry
